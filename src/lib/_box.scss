@use '../config';
@use '../utils/util';

/* - Box 盒模型 -
************************* */

// Padding
@each $outer-key, $outer-value in util.map-handler(config.$map-padding) {

  @each $inner-key, $inner-values in (
    '': (padding),
    't': (padding-top),
    'r': (padding-right),
    'b': (padding-bottom),
    'l': (padding-left),
    'x': (padding-right, padding-left),
    'y': (padding-top, padding-bottom)) {

    @if $inner-key == '' {

      #{util.class-generator(config.$abbr-padding, $outer-key)}
      {

        @each $value in $inner-values {
          #{$value}: $outer-value;
        }

      }

    }
    @else {

      #{util.class-generator(#{config.$abbr-padding + $inner-key}, $outer-key)}
      {

        @each $value in $inner-values {
          #{$value}: $outer-value;
        }

      }

    }

  }

}

// Margin
@each $outer-key, $outer-value in util.map-handler(config.$map-margin) {

  @each $inner-key, $inner-values in (
    '': (margin),
    't': (margin-top),
    'r': (margin-right),
    'b': (margin-bottom),
    'l': (margin-left),
    'x': (margin-right, margin-left),
    'y': (margin-top, margin-bottom)) {

    @if $outer-key == '' {

      @if $outer-key != 'auto' {

        #{util.class-generator(#{'-' + config.$abbr-margin}, $outer-key)}
        {

          @each $value in $inner-values {
            #{$value}: #{'-' + $outer-value};
          }

        }

      }

      #{util.class-generator(config.$abbr-margin, $outer-key)}
      {

        @each $value in $inner-values {
          #{$value}: $outer-value;
        }

      }

    }
    @else {

      @if $outer-key != 'auto' {

        #{util.class-generator(#{'-' + config.$abbr-margin + $inner-key}, $outer-key)}
        {

          @each $value in $inner-values {
            #{$value}: #{'-' + $outer-value};
          }

        }

      }

      #{util.class-generator(#{config.$abbr-margin + $inner-key}, $outer-key)}
      {

        @each $value in $inner-values {
          #{$value}: $outer-value;
        }

      }
    }
  }

}

// Width
@each $key, $value in util.map-handler(config.$map-width) {

  #{util.class-generator(config.$abbr-width, $key)}
  {
    width: $value;
  }

}

// Min Width
@each $key, $value in util.map-handler(config.$map-minWidth) {

  #{util.class-generator(min, config.$abbr-width, $key)}
  {
    min-width: $value;
  }

}

// Max Width
@each $key, $value in util.map-handler(config.$map-maxWidth) {

  #{util.class-generator(max, config.$abbr-width, $key)}
  {
    max-width: $value;
  }

}

// Height
@each $key, $value in util.map-handler(config.$map-height) {

  #{util.class-generator(config.$abbr-height, $key)}
  {
    height: $value;
  }

}

// Min Height
@each $key, $value in util.map-handler(config.$map-minHeight) {

  #{util.class-generator(min, config.$abbr-height, $key)}
  {
    min-height: $value;
  }

}

// Max Height
@each $key, $value in util.map-handler(config.$map-maxHeight) {

  #{util.class-generator(max, config.$abbr-height, $key)}
  {
    max-height: $value;
  }

}
@use '../../dev/config';

@function backslash-escape($value) {
  $dot-index: str-index($value, '.');

  $slash-index: str-index($value, '/');

  @if $dot-index != null {
    @return unquote($string: str-insert(quote($string: $value), '\\', $dot-index));
  }

  @if $slash-index != null {
    @return unquote($string: str-insert(quote($string: $value), '\\', $slash-index));
  }


  @return unquote($string: $value);
}

@function pick($value, $default) {
  $new-value: $default;

  @if $value != '' and $value != null {
    $new-value: $value;
  }

  @if type-of($value: $new-value) == 'string' {
    $new-value: unquote($string: $new-value);
    $list-value: ();
    $index: str-index($value, ',');

    @if $index != null {

      @each $value in ($new-value) {
        $list-value: append(
          $list: $list-value,
          $val: quote($value),
          $separator: comma
        )
      }

      @debug '$list-value', $list-value;

      @return $list-value;
    }

    @return $new-value;
  }
  @else {
    @return $new-value;
  }
}

@function pick-map($value, $default, $ext-map: null) {
  $new-value: $default;

  @if $value != '' and $value != null and length($list: $value) > 0 {
    $new-value: $value;
  }

  $keys: map-keys($map: $new-value);
  $values: map-values($map: $new-value);
  $index: 1;

  $result: (backslash-escape(nth($list: $keys, $n: $index)): nth($list: $values, $n: $index));

  $index: $index + 1;

  @while $index <= length($list: $new-value) {
    $result: map-merge($map1: $result, $map2: (backslash-escape(nth($list: $keys, $n: $index)): nth($list: $values, $n: $index)));

    $index: $index + 1;
  }

  @if $ext-map != null and length($list: $ext-map) > 0 {
    $result: map-merge($map1: $result, $map2: $ext-map);
  }

  @return $result;
}

$use-normalize: pick(
  config.$use-normalize,
  true
);

$class-prefix: pick(
  config.$class-prefix,
  ''
);

$class-connector: pick(
  config.$class-connector,
  '-'
);

$class-connectors: pick(
  config.$class-connectors,
  ()
);

$abbr-container: pick(
  config.$abbr-container,
  container
);

$abbr-box-decoration-break: pick(
  config.$abbr-box-decoration-break,
  decoration
);

$abbr-box-sizing: pick(
  config.$abbr-box-sizing,
  box
);

$abbr-float: pick(
  config.$abbr-float,
  float
);

$abbr-clear: pick(
  config.$abbr-clear,
  clear
);

$abbr-object-fit: pick(
  config.$abbr-object-fit,
  object
);

$abbr-object-position: pick(
  config.$abbr-object-position,
  object
);

$abbr-overflow: pick(
  config.$abbr-overflow,
  overflow
);

$abbr-overscroll-behavior: pick(
  config.$abbr-overscroll-behavior,
  overscroll
);

$abbr-position: pick(
  config.$abbr-position,
  position
);

$abbr-inset: pick(
  config.$abbr-inset,
  inset
);

$abbr-top: pick(
  config.$abbr-top,
  top
);

$abbr-right: pick(
  config.$abbr-right,
  right
);

$abbr-bottom: pick(
  config.$abbr-bottom,
  bottom
);

$abbr-left: pick(
  config.$abbr-left,
  left
);

$abbr-visible: pick(
  config.$abbr-visible,
  visible
);

$abbr-z-index: pick(
  config.$abbr-z-index,
  z
);

$abbr-flex: pick(
  config.$abbr-flex,
  flex
);

$abbr-order: pick(
  config.$abbr-order,
  order
);

$abbr-grid: pick(
  config.$abbr-grid,
  grid
);

$abbr-grid-column: pick(
  config.$abbr-grid-column,
  col
);

$abbr-grid-row: pick(
  config.$abbr-grid-row,
  row
);

$abbr-grid-auto: pick(
  config.$abbr-grid-auto,
  auto
);

$abbr-gap: pick(
  config.$abbr-gap,
  gap
);

$abbr-justify-content: pick(
  config.$abbr-justify-content,
  justify
);

$abbr-justify-items: pick(
  config.$abbr-justify-items,
  justify-items
);

$abbr-justify-self: pick(
  config.$abbr-justify-self,
  justify-self
);

$abbr-align-content: pick(
  config.$abbr-align-content,
  content
);

$abbr-align-items: pick(
  config.$abbr-align-items,
  items
);

$abbr-align-self: pick(
  config.$abbr-align-self,
  self
);

$abbr-place-content: pick(
  config.$abbr-place-content,
  place-content
);

$abbr-place-items: pick(
  config.$abbr-place-items,
  place-items
);

$abbr-place-self: pick(
  config.$abbr-place-self,
  place-self
);

$abbr-padding: pick(
  config.$abbr-padding,
  p
);

$abbr-margin: pick(
  config.$abbr-margin,
  m
);

$abbr-width: pick(
  config.$abbr-width,
  w
);

$abbr-height: pick(
  config.$abbr-height,
  h
);

$abbr-font-family: pick(
  config.$abbr-font-family,
  font
);

$abbr-font-size: pick(
  config.$abbr-font-size,
  text
);

$abbr-font-smoothing: pick(
  config.$abbr-font-smoothing,
  antialiased
);

$abbr-font-style: pick(
  config.$abbr-font-style,
  italic
);

$abbr-font-weight: pick(
  config.$abbr-font-weight,
  font
);

$abbr-letter-spacing: pick(
  config.$abbr-letter-spacing,
  tracking
);

$abbr-line-height: pick(
  config.$abbr-line-height,
  leading
);

$abbr-list-style: pick(
  config.$abbr-list-style,
  list
);

$abbr-text-align: pick(
  config.$abbr-text-align,
  text
);

$abbr-text-color: pick(
  config.$abbr-text-color,
  text
);

$abbr-text-opacity: pick(
  config.$abbr-text-opacity,
  text-opacity
);

$abbr-text-overflow: pick(
  config.$abbr-text-overflow,
  overflow
);

$abbr-line-clamp: pick(
  config.$abbr-line-clamp,
  line-clamp
);

$abbr-vertical-align: pick(
  config.$abbr-vertical-align,
  align
);

$abbr-white-space: pick(
  config.$abbr-white-space,
  whitespace
);

$abbr-word-break: pick(
  config.$abbr-word-break,
  break
);

$abbr-background-attachment: pick(
  config.$abbr-background-attachment,
  bg
);

$abbr-background-clip: pick(
  config.$abbr-background-clip,
  bg-clip
);

$abbr-background-color: pick(
  config.$abbr-background-color,
  bg
);

$abbr-background-opacity: pick(
  config.$abbr-background-opacity,
  bg-opacity
);

$abbr-background-origin: pick(
  config.$abbr-background-origin,
  bg-origin
);

$abbr-background-position: pick(
  config.$abbr-background-position,
  bg
);

$abbr-background-repeat: pick(
  config.$abbr-background-repeat,
  bg
);

$abbr-background-size: pick(
  config.$abbr-background-size,
  bg
);

$abbr-background-image: pick(
  config.$abbr-background-image,
  bg
);

$abbr-background-image-gradient-from: pick(
  config.$abbr-background-image-gradient-from,
  from
);

$abbr-background-image-gradient-via: pick(
  config.$abbr-background-image-gradient-via,
  via
);

$abbr-background-image-gradient-to: pick(
  config.$abbr-background-image-gradient-to,
  to
);

// 以下数组用于 CSS 属性名/值的遍历

$screens: pick-map(
  config.$screens,
  (
    'sm': 640px,
    'md': 768px,
    'lg': 1024px,
    'xl': 1280px,
    '2xl': 1536px,
  )
);

// TODO: 需要额外处理inherit current transparent black white 属性
$color-hues: pick-map(
  config.$colors,
  (
    brand: #1890ff,
    inherit: inherit,
    current: current,
    transparent: transparent,
    black: #000,
    white: #fff,
    gray: #111827,
    red: #f5222d,
    yellow: #fadb14,
    green: #52c41a,
    blue: #1890ff,
    indigo: #312e81,
    purple: #722ed1,
    pink: #eb2f96
  )
);

$common-spacing: (
  'px': 1px,
  '0': 0px,
  '0.5': 0.125rem,
  '1': 0.25rem,
  '1.5': 0.375rem,
  '2': 0.5rem,
  '2.5': 0.625rem,
  '3': 0.75rem,
  '3.5': 0.875rem,
  '4': 1rem,
  '5': 1.25rem,
  '6': 1.5rem,
  '7': 1.75rem,
  '8': 2rem,
  '9': 2.25rem,
  '10': 2.5rem,
  '11': 2.75rem,
  '12': 3rem,
  '14': 3.5rem,
  '16': 4rem,
  '20': 5rem,
  '24': 6rem,
  '28': 7rem,
  '32': 8rem,
  '36': 9rem,
  '40': 10rem,
  '44': 11rem,
  '48': 12rem,
  '52': 13rem,
  '56': 14rem,
  '60': 15rem,
  '64': 16rem,
  '72': 18rem,
  '80': 20rem,
  '96': 24rem
);

// 间距数组
$spaces: pick-map(
  config.$spacing,
  $common-spacing
);

// 定位元素 Top Right Bottom Left 距离数组
$insets: pick-map(
  config.$inset,
  map-merge(
    $map1: $common-spacing,
    $map2: (
      'auto': auto,
      'full': 100%,
      '1/2': '50%',
      '1/3': '33.333333%',
      '2/3': '66.666667%',
      '1/4': '25%',
      '2/4': '50%',
      '3/4': '75%'
    )
  )
);

$flexes: pick-map(
  config.$flex,
  (
    1: '1 1 0%',
    auto: '1 1 auto',
    initial: '0 1 auto',
    none: 'none',
  )
);

$flexGrows: pick-map(
  config.$flexGrow,
  (
    0: '0',
    DEFAULT: '1',
  )
);

$flexShrinks: pick-map(
  config.$flexShrink,
  (
    0: '0',
    DEFAULT: '1',
  )
);

$orders: pick-map(
  config.$order,
  (
    first: '-9999',
    last: '9999',
    none: '0',
    1: '1',
    2: '2',
    3: '3',
    4: '4',
    5: '5',
    6: '6',
    7: '7',
    8: '8',
    9: '9',
    10: '10',
    11: '11',
    12: '12',
  )
);

$zIndexes: pick-map(
  config.$zIndex,
  (
    auto: 'auto',
    0: '0',
    10: '10',
    20: '20',
    30: '30',
    40: '40',
    50: '50',
  )
);

$gridAutoColumns: pick-map(
  config.$gridAutoColumns,
  (
    auto: 'auto',
    min: 'min-content',
    max: 'max-content',
    fr: 'minmax(0, 1fr)',
  )
);

$gridAutoRows: pick-map(
  config.$gridAutoRows,
  (
    auto: 'auto',
    min: 'min-content',
    max: 'max-content',
    fr: 'minmax(0, 1fr)',
  )
);

$gridColumn: pick-map(
  config.$gridColumn,
  (
    auto: 'auto',
    'span-1': 'span 1 / span 1',
    'span-2': 'span 2 / span 2',
    'span-3': 'span 3 / span 3',
    'span-4': 'span 4 / span 4',
    'span-5': 'span 5 / span 5',
    'span-6': 'span 6 / span 6',
    'span-7': 'span 7 / span 7',
    'span-8': 'span 8 / span 8',
    'span-9': 'span 9 / span 9',
    'span-10': 'span 10 / span 10',
    'span-11': 'span 11 / span 11',
    'span-12': 'span 12 / span 12',
    'span-full': '1 / -1',
  )
);

$common-grid-column: (
  auto: 'auto',
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '5',
  6: '6',
  7: '7',
  8: '8',
  9: '9',
  10: '10',
  11: '11',
  12: '12',
  13: '13',
);

$gridColumnEnd: pick-map(
  config.$gridColumnEnd,
  $common-grid-column
);

$gridColumnStart: pick-map(
  config.$gridColumnStart,
  $common-grid-column
);

$gridRow: pick-map(
  config.$gridRow,
  (
    auto: 'auto',
    'span-1': 'span 1 / span 1',
    'span-2': 'span 2 / span 2',
    'span-3': 'span 3 / span 3',
    'span-4': 'span 4 / span 4',
    'span-5': 'span 5 / span 5',
    'span-6': 'span 6 / span 6',
    'span-full': '1 / -1',
  )
);

$common-grid-row: (
  auto: 'auto',
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '5',
  6: '6',
  7: '7',
);

$gridRowStart: pick-map(
  config.$gridRowStart,
  $common-grid-row
);

$gridRowEnd: pick-map(
  config.$gridRowEnd,
  $common-grid-row
);

$gridTemplateColumns: pick-map(
  config.$gridTemplateColumns,
  (
    none: 'none',
    1: 'repeat(1, minmax(0, 1fr))',
    2: 'repeat(2, minmax(0, 1fr))',
    3: 'repeat(3, minmax(0, 1fr))',
    4: 'repeat(4, minmax(0, 1fr))',
    5: 'repeat(5, minmax(0, 1fr))',
    6: 'repeat(6, minmax(0, 1fr))',
    7: 'repeat(7, minmax(0, 1fr))',
    8: 'repeat(8, minmax(0, 1fr))',
    9: 'repeat(9, minmax(0, 1fr))',
    10: 'repeat(10, minmax(0, 1fr))',
    11: 'repeat(11, minmax(0, 1fr))',
    12: 'repeat(12, minmax(0, 1fr))',
  )
);

$gridTemplateRows: pick-map(
  config.$gridTemplateRows,
  (
    none: 'none',
    1: 'repeat(1, minmax(0, 1fr))',
    2: 'repeat(2, minmax(0, 1fr))',
    3: 'repeat(3, minmax(0, 1fr))',
    4: 'repeat(4, minmax(0, 1fr))',
    5: 'repeat(5, minmax(0, 1fr))',
    6: 'repeat(6, minmax(0, 1fr))',
  )
);

$gaps: pick-map(
  config.$gap,
  $common-spacing
);

$objectPositions: pick-map(
  config.$objectPosition,
  (
    bottom: 'bottom',
    center: 'center',
    left: 'left',
    'left-bottom': 'left bottom',
    'left-top': 'left top',
    right: 'right',
    'right-bottom': 'right bottom',
    'right-top': 'right top',
    top: 'top',
  )
);

$margins: pick-map(
  config.$margin,
  map-merge(
    $map1: $common-spacing,
    $map2: (
      'auto': auto
    )
  )
);

$paddings: pick-map(
  config.$padding,
  $common-spacing
);

$widths: pick-map(
  config.$width,
  map-merge(
    $map1: $common-spacing,
    $map2: (
      'auto': auto,
      '1/2': '50%',
      '1/3': '33.333333%',
      '2/3': '66.666667%',
      '1/4': '25%',
      '2/4': '50%',
      '3/4': '75%',
      '1/5': '20%',
      '2/5': '40%',
      '3/5': '60%',
      '4/5': '80%',
      '1/6': '16.666667%',
      '2/6': '33.333333%',
      '3/6': '50%',
      '4/6': '66.666667%',
      '5/6': '83.333333%',
      '1/12': '8.333333%',
      '2/12': '16.666667%',
      '3/12': '25%',
      '4/12': '33.333333%',
      '5/12': '41.666667%',
      '6/12': '50%',
      '7/12': '58.333333%',
      '8/12': '66.666667%',
      '9/12': '75%',
      '10/12': '83.333333%',
      '11/12': '91.666667%',
      full: '100%',
      screen: '100vw',
      min: 'min-content',
      max: 'max-content',
      fit: 'fit-content',
    )
  )
);

$heights: pick-map(
  config.$height,
  map-merge(
    $map1: $common-spacing,
    $map2: (
      'auto': auto,
      '1/2': '50%',
      '1/3': '33.333333%',
      '2/3': '66.666667%',
      '1/4': '25%',
      '2/4': '50%',
      '3/4': '75%',
      '1/5': '20%',
      '2/5': '40%',
      '3/5': '60%',
      '4/5': '80%',
      '1/6': '16.666667%',
      '2/6': '33.333333%',
      '3/6': '50%',
      '4/6': '66.666667%',
      '5/6': '83.333333%',
      full: '100%',
      screen: '100vh',
      min: 'min-content',
      max: 'max-content',
      fit: 'fit-content',
    )
  )
);

$maxHeights: pick-map(
  config.$maxHeight,
  map-merge(
    $map1: $common-spacing,
    $map2: (
      full: '100%',
      screen: '100vh',
      min: 'min-content',
      max: 'max-content',
      fit: 'fit-content',
    )
  )
);

$maxWidths: pick-map(
  config.$maxWidth,
  (
    none: 'none',
    0: '0rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    full: '100%',
    min: 'min-content',
    max: 'max-content',
    fit: 'fit-content',
    prose: '65ch',
  )
);

$minHeights: pick-map(
  config.$minHeight,
  (
    0: '0px',
    full: '100%',
    screen: '100vh',
    min: 'min-content',
    max: 'max-content',
    fit: 'fit-content',
  )
);

$minWidths: pick-map(
  config.$minWidth,
  (
    0: '0px',
    full: '100%',
    min: 'min-content',
    max: 'max-content',
    fit: 'fit-content',
  )
);

$fontSizes: pick-map(
  config.$fontSize,
  (
    xs: 0.75rem,
    sm: 0.875rem,
    base: 1rem,
    lg: 1.125rem,
    xl: 1.25rem,
    2xl: 1.5rem,
    3xl: 1.875rem,
    4xl: 2.25rem,
    5xl: 3rem,
    6xl: 3.75rem,
    7xl: 4.5rem,
    8xl: 6rem,
    9xl: 8rem,
  )
);
$fontSizeLineHeights: pick-map(
  config.$fontSizeLineHeight,
  (
    xs: 1rem,
    sm: 1.25rem,
    base: 1.5rem,
    lg: 1.75rem,
    xl: 1.75rem,
    2xl: 2rem,
    3xl: 2.25rem,
    4xl: 2.5rem,
    5xl: 1,
    6xl: 1,
    7xl: 1,
    8xl: 1,
    9xl: 1,
  )
);






// CSS Var命名
$atomic-var-text-opacity-name: --text-opacity;

$atomic-var-background-opacity-name: --bg-opacity;

$atomic-var-gradient-stops-name: --gradient-stops;
$atomic-var-gradient-from-name: --gradient-from;
$atomic-var-gradient-to-name: --gradient-to;




// Position 定位
// Display 元素盒类型
// Hidden 元素不可见
// Outline 元素边框
$atomic-outline-name: 'ol';
// LineClamp 内容指定行数
// Width 宽度
// Height 高度
// Border 边框
$atomic-border-name: 'bd';
// BorderCollapse 合并边框
$atomic-border-collapse-name: 'bdcl';
// BorderRadius 边框圆角
$atomic-border-radius-name: 'bdrs';
// BoxShadow 盒阴影
$atomic-box-shadow-name: 'bxs';
// VerticalAlign 垂直对齐
// TextAlign 文本对齐
// TextDecoration 文本装饰
// WhiteSpace 空格处理
// LineHeight 行高
// Opacity 透明度
$atomic-opacity-name: 'op';
// Cursor 鼠标
$atomic-cursor-name: 'cur';
// Page 页面
$atomic-page-name: 'pg';
// PointerEvents 元素是否对指针事件做出反应
$atomic-pointer-events-name: 'pe';
// ListStyle 列表样式
// Print 打印
$atomic-print-name: 'pt';
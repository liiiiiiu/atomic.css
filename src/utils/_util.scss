@use '../base/var';

// 混合颜色
// $color 需要被减淡的颜色
// $weight 被减淡的颜色的权重
@function mix-color($color, $weight, $mix-color: #fff) {
  @return mix($color, $mix-color, $weight);
}

// 计算函数
@function big($a, $b: 1, $operator:'plus') {
  $result: '';

  @if $operator == 'plus' {
    $result: calc($a + $b);
  }
  @else if $operator == 'minus' {
    $result: calc($a - $b);
  }
  @else if $operator == 'times' {

    @if $b == 0 {
      $b: 1;
    }

    $result: calc($a * $b);
  }
  @else if $operator == 'div' {

    @if $b == 0 {
      $b: 1;
    }

    $result: calc($a / $b);
  }
  @else {
    $result: $a;
  }

  @return $result;
}

// 给类名打上选择器、前缀
@function selector-decorator($name, $selector: '.', $prefix: var.$class-prefix) {
  $_prefix: '';

  @if $prefix != '' {
    $_prefix: $prefix + var.$class-connector;
  }

  @return $selector + $_prefix + $name;
}

// 给类名打上连接符
@function connector-decorator($list...) {
  $result: '';
  $list-len: 0;
  $new-list: ();

  $_index: 1;

  @while $_index <= length($list) {

    $value: nth($list: $list, $n: $_index);

    @if $value != '' {
      $new-list: append(
        $list: $new-list,
        $val: $value,
        $separator: comma
      );
    }

    $_index: big($_index);

  }

  $list-len: length($list: $new-list);

  $connector: var.$class-connector;

  $connectors: var.$class-connectors;

  @if type-of($value: $connectors)=='string' {
    $connectors: (unquote($string: $connectors));
  }

  $connectors-len: 0;

  @if var.$class-connector {
    $connectors-len: length($list: $connectors);
  }

  @if $connectors-len > 0 {
    $connector: nth($list: $connectors, $n: 1);
  }

  $index: 1;

  @while $index <= $list-len {

    @if $connectors-len > 0 {

      @if $index <= $connectors-len {
        $connector: nth($list: $connectors, $n: $index);
      }

    }

    @if $index == $list-len {
      $connector: '';
    }

    $result: $result + nth($list: $new-list, $n: $index) + $connector;

    $index: big($index);

  }

  @return $result;
}

@function selector-with-connector($list...) {
  @return selector-decorator(connector-decorator($list...));
}

// 在字符串指定位置插入字符
@function str-insert-backslash($string) {
  $index: str-index($string, '.');

  @if $index != null {
    @return unquote($string: str-insert(quote($string: $string), '\\', $index));
  }

  @return unquote($string: $string);
}

// 在给定值后面添加单位（rem）
@function join-rem($value) {
  @return #{$value + rem};
}

// 带透明度的颜色混合
@function mix-color-with-opacity($color, $opacity) {
  @return mix-color($color, percentage(calc($opacity / 10 / 100)));
}

// Generator

// 间距字典生成器
// 用于宽、高、内外边距等属性的遍历；
// 由于存在小数，数组 key 值必须要使用引号才能使用字符串函数进行转义
@function spacing-generator() {
  @return (
    'px': var.$spacing-px,
    '0': var.$spacing-0,
    '0.5': var.$spacing-0\.5,
    '1': var.$spacing-1,
    '1.5': var.$spacing-1\.5,
    '2': var.$spacing-2,
    '2.5': var.$spacing-2\.5,
    '3': var.$spacing-3,
    '3.5': var.$spacing-3\.5,
    '4': var.$spacing-4,
    '5': var.$spacing-5,
    '6': var.$spacing-6,
    '7': var.$spacing-7,
    '8': var.$spacing-8,
    '9': var.$spacing-9,
    '10': var.$spacing-10,
    '11': var.$spacing-11,
    '12': var.$spacing-12,
    '14': var.$spacing-14,
    '16': var.$spacing-16,
    '20': var.$spacing-20,
    '24': var.$spacing-24,
    '28': var.$spacing-28,
    '32': var.$spacing-32,
    '36': var.$spacing-36,
    '40': var.$spacing-40,
    '44': var.$spacing-44,
    '48': var.$spacing-48,
    '52': var.$spacing-52,
    '56': var.$spacing-56,
    '60': var.$spacing-60,
    '64': var.$spacing-64,
    '72': var.$spacing-72,
    '80': var.$spacing-80,
    '96': var.$spacing-96,
    'auto': auto,
    'full': 100%
  );
}

// 颜色明度数组生成器
@function color-brightness-generator() {
  @return (
    50,
    100,
    200,
    300,
    400,
    500,
    600,
    700,
    800,
    900
  );
}

// 颜色色相数组生成器
@function color-hues-generator() {
  @return (
    brand: var.$colors-brand,
    gray: var.$colors-gray,
    red: var.$colors-red,
    yellow: var.$colors-yellow,
    green: var.$colors-green,
    blue: var.$colors-blue,
    indigo: var.$colors-indigo,
    purple: var.$colors-purple,
    pink: var.$colors-pink
  );
}

// 透明度数组生成器
@function opacities-generator() {
  @return (
    0: 0,
    5: 0.05,
    10: 0.1,
    20: 0.2,
    30: 0.3,
    40: 0.4,
    50: 0.5,
    60: 0.6,
    70: 0.7,
    75: 0.75,
    80: 0.8,
    90: 0.9,
    95: 0.95,
    100: 1
  );
}

// 媒体查询断点数组生成器
@function screen-media-queries-generator() {
  @return (
    sm: (min-width: #{var.$screens-sm}),
    md: (min-width: #{var.$screens-md}),
    lg: (min-width: #{var.$screens-lg}),
    xl: (min-width: #{var.$screens-xl}),
    2xl: (min-width: #{var.$screens-sm2xl})
  );
}

// 数字列表生成器
@function number-list-generator($min: 0, $max: 100, $step: 1) {
  $list: ();
  $index: $min;

  @while $index <= $max {
    $list: append(
      $list: $list,
      $val: $index,
      $separator: comma
    );

    $index: big($index, $step);
  }

  @return $list;
}